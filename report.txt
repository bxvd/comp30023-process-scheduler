Custom scheduling algorithm: Shortest-Job-First
Inserts new processes into queue in increasing order of required job time and allows scheduler to complete
each job to completion, prioritising those with a shorter job time. This reduces the time overhead and
turnaround time, preferable in scenarios where number of jobs completed is valued and the specific
priority of each process is unknown. Performance comparison:

Shortest-Job-First:
Throughput 2, 0, 3
Turnaround time 142
Time overhead 9.80 6.04
Makespan 373

First-Come-First-Served:
Throughput 2, 0, 3
Turnaround time 191
Time overhead 35.40 13.42
Makespan 373

Round-Robin:
Throughput 2, 0, 3
Turnaround time 300
Time overhead 26.10 13.68
Makespan 531

Custom memory allocator:
Similar to virtual but takes extra steps to ensure only the largest processes are using virtual memory, allowing
the system to more quickly increase its speed with each process it completes. As this is based on virtual memory
its performance is marginally better, with a 16 second reduction in makespan. Performance comparison:

Smallest-Job-First:
Throughput 2, 0, 3
Turnaround time 243
Time overhead 18.60 11.84
Makespan 401

Virtual:
Throughput 2, 0, 3
Turnaround time 241
Time overhead 18.60 11.65
Makespan 417

Swapping-X:
Throughput 2, 0, 3
Turnaround time 258
Time overhead 18.60 12.26
Makespan 435
